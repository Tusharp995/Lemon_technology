@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@model IEnumerable<E_Commerce_Web_Application.Models.Product>

@{
    var user = await UserManager.GetUserAsync(User);
    var roles = user != null ? await UserManager.GetRolesAsync(user) : new List<string>();
    bool canCreate = roles.Contains("Seller") || roles.Contains("Admin");
    var isBuyer = roles.Contains("Buyer");

    var currentCategory = Context.Request.Query["category"].ToString();
    var currentSearch = Context.Request.Query["search"].ToString();
    var currentMin = Context.Request.Query["minPrice"].ToString();
    var currentMax = Context.Request.Query["maxPrice"].ToString();
}

@if (canCreate)
{
    <p class="mb-4">
        <a class="btn btn-success" asp-action="Create"><i class="bi bi-plus-circle"></i> Add New Product</a>
    </p>
}

<form asp-action="Index" method="get" class="border p-4 rounded bg-light mb-4 shadow-sm">
    <div class="row g-3">
        <div class="col-md-3">
            <input type="text" name="search" class="form-control" placeholder="🔍 Search by name" value="@currentSearch" />
        </div>
        <div class="col-md-3">
            <select name="category" class="form-select">
                <option value="">🗂️ All Categories</option>
                @foreach (var cat in ViewBag.Categories as List<string>)
                {
                    <option value="@cat" selected="@(cat == ViewBag.Category ? "selected" : null)">@cat</option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <input type="number" step="0.01" name="minPrice" class="form-control" placeholder="Min Price" value="@currentMin" />
        </div>
        <div class="col-md-2">
            <input type="number" step="0.01" name="maxPrice" class="form-control" placeholder="Max Price" value="@currentMax" />
        </div>
        <div class="col-md-2 d-flex align-items-end">
            <button type="submit" class="btn btn-primary w-100">Apply Filters</button>
        </div>
    </div>
    <div class="mt-3 text-end">
        <a href="@Url.Action("Index")" class="btn btn-secondary btn-sm">Clear Filters</a>
    </div>
</form>

<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var item in Model)
    {
        <div class="col">
            <div class="card h-100 shadow-sm">
                @if (item.Images != null && item.Images.Any())
                {
                    <img src="@item.Images.First().ImageUrl" class="card-img-top" style="height:200px; object-fit:cover;" />
                }
                else
                {
                    <div class="text-center py-5 bg-light">No Image</div>
                }

                <div class="card-body">
                    <h5 class="card-title">@item.Name</h5>
                    <p class="card-text text-muted">@item.Category</p>
                    <p class="card-text fw-bold">₹@item.Price</p>
                </div>
                <div class="card-footer bg-white border-top-0 d-flex justify-content-between align-items-center">
                    <a asp-action="Detail" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm">Details</a>

                    @if (canCreate)
                    {
                        <div>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning btn-sm me-2">Edit</a>
                            <form asp-action="DeleteConfirmed" asp-route-id="@item.Id" method="post" style="display:inline;">
                                <button type="submit" class="btn btn-outline-danger btn-sm">Delete</button>
                            </form>
                        </div>
                    }
                    else if (isBuyer)
                    {
                        <span class="text-muted small" title="Only Admin or Seller can manage products.">
                            <i class="bi bi-lock-fill"></i>
                        </span>
                    }
                </div>
            </div>
        </div>
    }
</div>

<div class="mt-4 text-center">
    <span>Page @(ViewBag.CurrentPage) of @(ViewBag.TotalPages)</span>
    <div class="btn-group mt-2">
        @for (int i = 1; i <= (int)ViewBag.TotalPages; i++)
        {
            <a class="btn btn-outline-secondary @(i == ViewBag.CurrentPage ? "active" : "")"
               asp-action="Index"
               asp-route-page="@i"
               asp-route-search="@ViewBag.Search"
               asp-route-category="@ViewBag.Category"
               asp-route-minPrice="@ViewBag.MinPrice"
               asp-route-maxPrice="@ViewBag.MaxPrice">@i</a>
        }
    </div>
</div>
